version: '3'
services:
  #postgres-database
  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: dbpassword
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:dbpassword@db:5432/rails_monitor_production?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      db:
        condition: service_healthy

  #redis-database
  redis:
    image: redis

  redis_exporter:
    image: oliver006/redis_exporter
    environment:
      REDIS_ADDR: redis:6379
    ports:
      - "9121:9121"
    depends_on:
    - redis

  #rails_application
  web:
    build: .
    command: ./bin/rails server
    #command: bash -c "bin/rails db:create && bin/rails db:migrate && bundle exec rails s -b '0.0.0.0'"
    volumes:
      - ".:/myapp"
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=production
      - SECRET_KEY_BASE=dc23501ce6bf6497dd8b01cfbedaa35df7ef885bea64dd205cf2eaf9047beda34ae81337bbdf2b84d3fa74f8300aa8e59bfb220de237aca939c6a8c5401911d6
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
  prometheus_exporter:
    build: .
    command: bundle exec prometheus_exporter -b 0.0.0.0 -p 9394
    volumes:
      - ".:/myapp"
    ports:
      - "9394:9394"
    depends_on:
    - web

  #Prometheus_and_Grafana
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
  grafana:
    image: grafana/grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  postgres_data:
